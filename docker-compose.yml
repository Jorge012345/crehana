version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taskmanager_postgres
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: taskmanager
      POSTGRES_PASSWORD: taskmanager123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskmanager -d taskmanager"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Task Manager API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: taskmanager_api
    environment:
      DATABASE_URL: postgresql+asyncpg://taskmanager:taskmanager123@postgres:5432/taskmanager
      SECRET_KEY: your-super-secret-key-change-this-in-production
      DEBUG: "true"
      LOG_LEVEL: INFO
      LOG_FORMAT: text
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro  # Mount source code for development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (optional, for future caching)
  redis:
    image: redis:7-alpine
    container_name: taskmanager_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: taskmanager_network 